#include <string>
#include <fstream>
#include <iostream>
#include <vector>
#include <algorithm>
#include <cctype>

#include "map_reduce/protocol.h"

namespace mapReduce{
//
// The map function is called once for each file of input. The first
// argument is the name of the input file, and the second is the
// file's complete contents. You should ignore the input file name,
// and look only at the contents argument. The return value is a slice
// of key/value pairs.
//
    bool isDelimiter(char c) {
        return std::isspace(c) || std::ispunct(c);
    }

    std::vector<std::string> splitIntoWords(const std::string &content) {
        std::vector<std::string> words;
        std::istringstream iss(content);
        std::string word;
        while (iss >> std::noskipws >> word) {
            for (char &c : word) {
                if (isDelimiter(c)) {
                    c = ' '; // replace delimiter with space
                }
            }
            std::istringstream wordStream(word);
            std::string subword;
            while (wordStream >> subword) {
                if (!subword.empty()) {
                    words.push_back(subword);
                }
            }
        }
        return words;
    }

    std::vector<KeyVal> Map(const std::string &content) {
        // Your code goes here
        // Hints: split contents into an array of words.
        auto words = splitIntoWords(content);
        std::vector<KeyVal> ret;
        for (auto &word : words) {
            ret.emplace_back(word, "1");
        }
        return ret;

    }

//
// The reduce function is called once for each key generated by the
// map tasks, with a list of all the values created for that key by
// any map task.
//
    std::string Reduce(const std::string &key, const std::vector<std::string> &values) {
        // Your code goes here
        // Hints: return the number of occurrences of the word.
        int sum = 0;
        for (auto &value : values) {
            sum += std::stoi(value);
        }
        return std::to_string(sum);
    }
}